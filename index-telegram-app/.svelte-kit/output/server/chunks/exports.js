const e=new URL("sveltekit-internal://");function n(n,r){if("/"===r[0]&&"/"===r[1])return r;let t=new URL(n,e);return t=new URL(r,t),t.protocol===e.protocol?t.pathname+t.search+t.hash:t.href}function r(e,n){return"/"===e||"ignore"===n?e:"never"===n?e.endsWith("/")?e.slice(0,-1):e:"always"!==n||e.endsWith("/")?e:e+"/"}function t(e){return e.split("%25").map(decodeURI).join("%25")}function s(e){for(const n in e)e[n]=decodeURIComponent(e[n]);return e}function o(e,n,r,t=!1){const s=new URL(e);Object.defineProperty(s,"searchParams",{value:new Proxy(s.searchParams,{get(e,t){if("get"===t||"getAll"===t||"has"===t)return n=>(r(n),e[t](n));n();const s=Reflect.get(e,t);return"function"==typeof s?s.bind(e):s}}),enumerable:!0,configurable:!0});const o=["href","pathname","search","toString","toJSON"];t&&o.push("hash");for(const a of o)Object.defineProperty(s,a,{get:()=>(n(),e[a]),enumerable:!0,configurable:!0});return s[Symbol.for("nodejs.util.inspect.custom")]=(n,r,t)=>t(e,r),s.searchParams[Symbol.for("nodejs.util.inspect.custom")]=(n,r,t)=>t(e.searchParams,r),t||function(e){i(e),Object.defineProperty(e,"hash",{get(){throw new Error("Cannot access event.url.hash. Consider using `page.url.hash` inside a component instead")}})}(s),s}function a(e){i(e);for(const n of["search","searchParams"])Object.defineProperty(e,n,{get(){throw new Error(`Cannot access url.${n} on a page with prerendering enabled`)}})}function i(e){e[Symbol.for("nodejs.util.inspect.custom")]=(n,r,t)=>t(new URL(e),r)}function c(e){return function(n,r){if(n)for(const t in n){if("_"===t[0]||e.has(t))continue;const n=[...e.values()],s=h(t,r?.slice(r.lastIndexOf(".")))??`valid exports are ${n.join(", ")}, or anything with a '_' prefix`;throw new Error(`Invalid export '${t}'${r?` in ${r}`:""} (${s})`)}}}function h(e,n=".js"){const r=[];if(u.has(e)&&r.push(`+layout${n}`),l.has(e)&&r.push(`+page${n}`),f.has(e)&&r.push(`+layout.server${n}`),p.has(e)&&r.push(`+page.server${n}`),d.has(e)&&r.push(`+server${n}`),r.length>0)return`'${e}' is a valid export in ${r.slice(0,-1).join(", ")}${r.length>1?" or ":""}${r.at(-1)}`}const u=new Set(["load","prerender","csr","ssr","trailingSlash","config"]),l=new Set([...u,"entries"]),f=new Set([...u]),p=new Set([...f,"actions","entries"]),d=new Set(["GET","POST","PATCH","PUT","DELETE","OPTIONS","HEAD","fallback","prerender","trailingSlash","config","entries"]),g=c(u),w=c(l),m=c(f),b=c(p),$=c(d);export{s as a,g as b,b as c,a as d,w as e,t as f,$ as g,o as m,r as n,n as r,m as v};
